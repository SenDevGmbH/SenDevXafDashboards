# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
name: Revision-$(VersionRevision)
trigger:
- master
- DX-*

pool:
  vmImage: 'windows-2022'

variables:
  solution: 'src/build.proj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'
  NugetTargetDir: '$(Build.ArtifactStagingDirectory)'
  VersionRevision: $[counter('revisionCounter', 142)]
  NetSdkVersion: '8.0.405'
  BinLogDirectory: $(Build.ArtifactStagingDirectory)\Log  
  TargetDevExpressVersions: 24.1.4
steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    version: $(NetSdkVersion)
    packageType: 'sdk'
    includePreviewVersions: true
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: NuGetToolInstaller@1

- task: NuGetAuthenticate@1
 


- task: NuGetCommand@2
  displayName: "NuGet restore"
  inputs:
    command: restore
    restoreSolution: '**/*.sln'
    vstsFeed: 'DevExpress/Release'


- task: MSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/bl:$(BinLogDirectory)\build.binlog /t:NuGet /p:BuildNumber=$(VersionRevision) /p:PackageOutputPath=$(Build.ArtifactStagingDirectory) /p:TargetDevExpressVersions="$(TargetDevExpressVersions)" /p:NugetSource=$(NugetSource)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish binary log'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\Log'
    ArtifactName: 'Binary log'
    publishLocation: 'Container'
  condition: succeededOrFailed()

- task: MSBuild@1
  displayName: Build net48 unit tests
  inputs:
    solution: 'src\Libraries\UnitTests\UnitTests.csproj'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/bl:$(BinLogDirectory)\build_unittests.binlog /p:OutDir=$(Build.SourcesDirectory)\FrameworkTests'

- task: MSBuild@1
  displayName: Build net60 unit tests
  inputs:
    solution: 'src\Libraries\UnitTests.NetCore\UnitTests.NetCore.csproj'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/bl:$(BinLogDirectory)\build_unittests.core.binlog /p:OutDir=$(Build.SourcesDirectory)\NetCoreTests'

- task: VSTest@2
  displayName: 'VSTest - Net Framework'  
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      $(Build.SourcesDirectory)\FrameworkTests\**\UnitTests.dll

- task: VSTest@2
  displayName: 'VSTest - Net Core'  
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    overrideTestrunParameters: '-Framework:.NETCoreApp,Version=v6.0'
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      src\bin\**\UnitTests.NetCore.dll      
      
- task: NuGetCommand@2
  displayName: Push packages
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
  inputs:
    command: 'push' 
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    nuGetFeedType: 'external' 
    publishFeedCredentials: 'nuget.org'
